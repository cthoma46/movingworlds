/**
 * `InternalError` error.
 *
 * InternalError wraps errors generated by node-oauth.  By wrapping these
 * objects, error messages can be formatted in a manner that aids in debugging
 * OAuth issues.
 *
 * @api public
 */
function InternalError(message, err) {
  Error.call(this);
  Error.captureStackTrace(this, arguments.callee);
  this.name = 'InternalError';
  this.message = message;
  this.internalError = err;
};

/**
 * Inherit from `Error`.
 */
InternalError.prototype.__proto__ = Error.prototype;

/**
 * Returns a string representing the error.
 *
 * @return {String}
 * @api public
 */
InternalError.prototype.toString = function() {
  var m = this.message;
  if (this.internalError) {
    if (this.internalError instanceof Error) {
      m += ' (' + this.internalError + ')';
    }
    else if (this.internalError.statusCode && this.internalError.data) {
      m += ' (status: ' + this.internalError.statusCode + ' data: ' + this.internalError.data + ')';
    }
  }
  return m;
}


/**
 * Expose `InternalError`.
 */
module.exports = InternalError;
