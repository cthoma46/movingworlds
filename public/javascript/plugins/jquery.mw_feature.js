// Generated by CoffeeScript 1.4.0

(function($, window, document, undefined_) {
  var MwFeature, defaults, pluginName;
  MwFeature = function(element, options) {
    this.element = element;
    this.settings = $.extend({}, defaults, options);
    this.popup;
    this.markerData;
    this.markers = [];
    this.currentIndex;
    this.rotateInterval;
    this._defaults = defaults;
    this._name = pluginName;
    return this.init();
  };
  pluginName = "MwFeature";
  defaults = {
    offset: {
      x: 26,
      y: 190
    },
    autoStart: 8000,
    dropRate: 1,
    startIndex: 0,
    popupTemplate: "<div class=\"testemonial_popup\"><header><h2></h2><a href=\"#\" class=\"close_btn\">close</a></header><section class=\"profile\"><div class=\"avatar avatar_small\"><img src=\"images/tmp_avatar1.png\" width=\"100%\" height=\"100%\"></div><div class=\"profile_info\"><hgroup><h3></h3><h4></h4></hgroup><p></p></div></section><div class=\"popup_arrow\"></div></div>",
    markerTemplate: "<div class=\"marker\"></div>"
  };
  MwFeature.prototype = {
    init: function() {
      var data, i, marker, _this;
      _this = this;
      _this.popup = $(_this.settings.popupTemplate).appendTo(_this.element);
      _this.markerData = featureData;
      for (i in _this.markerData) {
        data = _this.markerData[i];
        marker = $(_this.settings.markerTemplate).appendTo(_this.element).addClass(data.type + "_icn").css({
          top: "-100px",
          left: data.x + "px"
        }).delay(i * _this.settings.dropRate * 100).animate({
          top: data.y + "px",
          opacity: 1
        }, 800, "easeOutBounce", function() {
          var index;
          index = $(this).index(".marker");
          if (index === _this.settings.startIndex) {
            _this.open(index, 2000);
            if (_this.settings.autoStart > 0) {
              return _this.play(_this.settings.startIndex);
            }
          }
        }).click(function(e) {
          e.preventDefault();
          return _this.open($(this).index(".marker"));
        });
        _this.markers.push($(marker));
      }
      $(".testemonial_popup .close_btn").click(function(e) {
        e.preventDefault();
        return _this.hide();
      });
      return $(this.popup).hover(function() {
        return _this.pause();
      });
    },
    open: function(index, delay) {
      var $arrow, arrowPos, left, position, xPos, yPos, _this;
      console.log("open", index, delay);
      _this = this;
      if (index === _this.currentIndex) {
        _this.hide();
        return;
      }
      if (typeof delay === "undefined") {
        delay = 0;
      }
      _this.currentIndex = index;
      position = _this.markers[index].position();
      left = position.left > $(_this.element).width() * .5;
      $arrow = $(_this.popup).children(".popup_arrow").first();
      yPos = _this.settings.offset.y;
      xPos = (left ? position.left - 447 - _this.settings.offset.x * .5 : position.left + _this.settings.offset.x);
      arrowPos = {};
      if (position.left > $(_this.element).width() * .5) {
        arrowPos = {
          right: "-13px",
          top: position.top - _this.settings.offset.y + "px",
          "background-position": "-36px -20px"
        };
      } else {
        arrowPos = {
          left: "-13px",
          top: position.top - _this.settings.offset.y + "px",
          "background-position": "-36px 0px"
        };
      }
      return $(_this.popup).slideUp("fast", "easeInSine", function() {
        $(".testemonial_popup h2").text(_this.markerData[index].h2);
        $(".testemonial_popup h3").text(_this.markerData[index].h3);
        $(".testemonial_popup h4").text(_this.markerData[index].h4);
        $(".testemonial_popup p").text(_this.markerData[index].description);
        $(".testemonial_popup .avatar img").attr("src", _this.markerData[index].image); 
        // $(".testemonial_popup .map img").attr("src", "http://maps.googleapis.com/maps/api/staticmap?center="+_this.markerData[index].city+","+_this.markerData[index].country+"&zoom=7&size=425x220&sensor=false&markers=icon:http://staging.movingworlds.org/images/icn_map_marker.png%7C"+_this.markerData[index].city+","+_this.markerData[index].country);
        $(_this.popup).attr("style", "").css({
          left: xPos + "px",
          top: yPos + "px"
        });
        $arrow.attr("style", "").css(arrowPos);
        return $(_this.popup).delay(delay).slideDown("slow", "easeOutSine");
      });
    },
    hide: function(speed) {
      var _this;
      _this = this;
      if (typeof speed === "undefined") {
        speed = "fast";
      }
      _this.pause();
      _this.currentIndex = null;
      $("#yplayer").attr("src", "");
      return $(_this.popup).slideUp(speed, "easeOutSine", function() {});
    },
    play: function(from) {
      var count, _this;
      _this = this;
      count = from;
      return _this.rotateInterval = setInterval(function() {
        if (count < _this.markers.length - 1) {
          count++;
        } else {
          count = 0;
        }
        return _this.open(count, 500);
      }, _this.settings.autoStart);
    },
    pause: function() {
      var _this;
      _this = this;
      return clearInterval(_this.rotateInterval);
    }
  };
  return $.fn[pluginName] = function(options) {
    return this.each(function() {
      if (!$.data(this, "plugin_" + pluginName)) {
        return $.data(this, "plugin_" + pluginName, new MwFeature(this, options));
      }
    });
  };
})(jQuery, window, document);
